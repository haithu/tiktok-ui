.search, .search-result {
  width: 361px;


}
.search {
  height: var(--search-height);
  padding-left: 12px;
  display: flex;
  position: relative;
  background-color: rgb(22, 24, 35, 0.06);
  border-radius: var(--search-border-radius);
  border: 1.5px solid transparent;

  input {
    flex: 1;
    height: 100%;
    color: var(--black);
    font-size: 1.6rem;
    background-color: transparent;
    caret-color: var(--primary);

  }
  input:not(:placeholder-shown) ~ .search-btn {
    // ~ Adjacent Sibling Selector
    color: rgba(22, 24, 35, 0.75);

  }
  &::after{
    //::after creates a pseudo-element that is the last child of the selected element.
    content: "";
    position: absolute;
    right: var(--search-button-width);
    width: 1px;
    height: calc(var(--search-height) - var(--search-top-space) * 2);

    top: var(--search-top-space);
    background-color: rgba(22, 24, 35, 0.12);
  }
  &:focus-within{
    //The :focus-within CSS pseudo-class matches an element if the element or any of its descendants are focused.
    border-color:  rgba(22, 24, 35, 0.2);
  }

}

.search-result{

}
.search-title{
  padding: 5px 12px;
  font-size: 1.4rem;
  font-weight: 600;
  color: rgba(22, 24, 35, 0.5);

}

.clear, .loading {
  position: absolute;
  right: calc(var(--search-button-width) + 16px);
  top: 50%;
  transform: translateY(-50%);
  // the translate translate the element -50% the height of the element which lead to a result the element's position is in the middle
  color: rgba(22, 24, 35, 0.34);


}
.loading {
  animation: spinner 1s linear infinite;

}
@keyframes spinner {
  from {
    transform: translateY(-50%) rotate(0);
  }
  to {
    transform: translateY(-50%) rotate(360deg);

  }

}

.search-btn {
  width: 52px;
  height: 100%;
  border-top-right-radius: var(--search-border-radius);
  border-bottom-right-radius: var(--search-border-radius);
  font-size: 1.8rem;
  color: rgba(22, 24, 35, 0.34);

  &:hover {
    cursor: pointer;
    background-color: rgb(22, 24, 35, 0.03);
  }
  &:active {
    //The :active CSS pseudo-class represents an element (such as a button) that is being activated by the user.
    background-color: rgba(22, 24, 35, 0.06);
  }



}